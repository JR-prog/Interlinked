name: Interlinked CI

on:
  push:
    branches: [main, production, 123-testing-revamp]
  pull_request:
    branches: [main, production]

env:
  CI: '' # Use this because otherwise warnings will make the pipeline fail
  FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
  NEXT_PUBLIC_FIREBASE_API_KEY: ${{secrets.REACT_APP_FIREBASE_API_KEY}}
  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{secrets.REACT_APP_FIREBASE_AUTH_DOMAIN}}
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{secrets.REACT_APP_FIREBASE_PROJECT_ID}}
  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{secrets.REACT_APP_FIREBASE_STORAGE_BUCKET}}
  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID}}
  NEXT_PUBLIC_FIREBASE_APP_ID: ${{secrets.REACT_APP_FIREBASE_APP_ID}}
  NEXT_PUBLIC_EMULATOR: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js for Frontend ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      # Setup Java for firebase CLI
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Firebase setup
        run: |
          npm i -g firebase-tools

      - name: Run Next tests & test coverage
        run: |
          npm ci
          npm run test:coverage

      - name: Run app for Cypress
        run: |
          npm run build:instrumented
          npm run start:instrumented &

      - name: Run e2e tests & coverage
        run: |
          firebase emulators:exec 'npx cypress run --spec cypress/e2e/all.cy.js' --import=firebase_exports
          npx nyc report --reporter=text-summary
